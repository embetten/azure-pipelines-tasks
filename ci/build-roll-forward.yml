steps:

# Clean
- checkout: self
  clean: true

# # Start collect diagnostics
# - powershell: ./ci/start-collect-diagnostics.ps1
#   displayName: Start collect diagnostics
#   condition: and(succeeded(), eq(variables.os, 'Windows_NT'), eq(variables.collect_diagnostics, 'true'))

# Use node 8, npm 5
- task: NodeTool@0
  displayName: Use node 8
  inputs:
    versionSpec: "8.x"

# npm install
- script: npm install
  displayName: npm install

# Verify min agent version demands
- script: |
    cd ci
    cd verifyMinAgentDemands
    npm install
    node index.js
  displayName: Verify all min agent demands are valid

# Build
- script: node make.js build --task "$(task)"
  displayName: Build

# Only on Windows:
- ${{ if eq(parameters.os, 'Windows_NT') }}:

  # Stage tasks individually into the package directory
  - script: node ./ci/stage-package.js individually
    displayName: Stage tasks individually into the package directory
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'), ne(variables['numTasks'], 0))

  # # Sign all task zips as nuget packages
  # - template: sign-all-tasks.yml
  #   parameters:
  #     layoutRoot: $(Build.SourcesDirectory)\_package\tasks-layout

  # Stage all the tasks into a single zip for upload
  - script: node ./ci/stage-package.js
    displayName: Stage all the tasks into a single zip for upload
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'), ne(variables['numTasks'], 0))

# Stage milestone
# TODO: Rename this.. we are staging task packages not the milestone.
- script: node .\ci\stage-milestone.js
  displayName: Stage milestone

# Stage per task NuGet package
- script: npm run package
  displayName: npm run package

# Authenticate 
# - task: NuGetAuthenticate@0
#   displayName: 'Authenticate with nuget'
#   condition: and(succeeded(), or(eq(variables['WEEK'], '3'), eq(variables['FORCE_COURTESY_PUSH'], 'true')))

# - script: |
#     cd IndividualNugetPackagesDownloaded
#     cd IndividualNugetPackages
#     push.cmd
#   displayName: 'Push Nuget packages'
#   condition: and(succeeded(), or(eq(variables['WEEK'], '3'), eq(variables['FORCE_COURTESY_PUSH'], 'true')))


# # Test
# - script: node make.js test
#   displayName: Run tests
# - script: node make.js testLegacy --task "$(task)"
#   displayName: Legacy tests with node 6

# # Publish test results
# - task: PublishTestResults@2
#   displayName: Publish Test Results test-*.xml
#   inputs:
#     testResultsFiles: 'test-*.xml'
#     testRunTitle: 'Node 6 Test Results'
#     searchFolder: '$(System.DefaultWorkingDirectory)/testresults'

# # Stop collect diagnostics
# - powershell: ./ci/stop-collect-diagnostics.ps1
#   displayName: Stop collect diagnostics
#   condition: and(always(), eq(variables.os, 'Windows_NT'), eq(variables.collect_diagnostics, 'true'))
